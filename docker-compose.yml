# For more information: https://laravel.com/docs/sail
version: '3'
services:
  traefik:
    image: traefik:v2.9
    container_name: traefik-rl
    command:
#      - "--api.debug=true"
#      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
#      - "--entryPoints.sail.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - sail
    labels:
      - 'traefik.http.middlewares.headersrl.headers.accesscontrolallowmethods=*'
      - 'traefik.http.middlewares.headersrl.headers.accesscontrolallowheaders=*'
      - 'traefik.http.middlewares.headersrl.headers.accesscontrolalloworiginlist=*'
      - 'traefik.http.middlewares.headersrl.headers.accesscontrolmaxage=100'
      - 'traefik.http.middlewares.headersrl.headers.addvaryheader=true'
  laravel:
    container_name: laravel-rl
    build:
      context: '${LARAVEL_PATH}/vendor/laravel/sail/runtimes/8.0'
      dockerfile: Dockerfile
      args:
        WWWGROUP: '${WWWGROUP}'
    ports:
      - '${APP_PORT:-80}:80'
    environment:
      WWWUSER: '${WWWUSER}'
      LARAVEL_SAIL: 1
    volumes:
      - '${LARAVEL_PATH}:/var/www/html'
    networks:
      - sail
    depends_on:
      - mysql
      - redis
      - traefik
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.laravel.rule=(Host(`app.localhost`) && PathPrefix(`/api/v2`))'
#      - 'traefik.docker.network=sail'
      - 'traefik.http.routers.laravel.middlewares=headersrl'
  mysql:
    container_name: mysql-rl
    image: 'mysql:8.0'
    ports:
      - '${FORWARD_DB_PORT:-3306}:3306'
    environment:
      MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
      MYSQL_DATABASE: '${DB_DATABASE}'
      MYSQL_USER: '${DB_USERNAME}'
      MYSQL_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
    volumes:
      - 'sailmysql:/var/lib/mysql'
    networks:
      - sail
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-p${DB_PASSWORD}"]
      retries: 3
      timeout: 5s
    labels:
      - traefik.enable=false
  redis:
    container_name: redis-rl
    image: 'redis:alpine'
    ports:
      - '${FORWARD_REDIS_PORT:-6379}:6379'
    volumes:
      - 'sailredis:/data'
    networks:
      - sail
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      retries: 3
      timeout: 5s
    labels:
      - traefik.enable=false
  nuxt:
    container_name: nuxt-rl
    build:
      context: './front'
      dockerfile: Dockerfile
      args:
        WWWGROUP: '${WWWGROUP}'
    ports:
      - '${WEB_PORT:-3000}:3000'
    volumes:
      - '${NUXT_PATH}:/app'
    networks:
      - sail
    restart: always
    depends_on:
      - laravel
      - traefik
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.nuxt.rule=Host(`app.localhost`)'
#      - 'traefik.docker.network=sail'
      - 'traefik.http.routers.nuxt.middlewares=headersrl'
networks:
  sail:
    driver: bridge
volumes:
  sailmysql:
    driver: local
  sailredis:
    driver: local
